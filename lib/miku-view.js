var MikuView;
var $ = require('jquery');

module.exports = MikuView = (function () {
    function MikuView(serializedState) {
        this.ramdomId = Math.random().toString().split('.')[1];
        this.miku = null;
        /*
        * 创建超时空结界空间
        * */
        this.element = document.createElement('div');
        this.element.classList.add('mmdContainer');
        this.element.id = 'container_' + this.ramdomId;

        /*
        * 使用iframe导通器连接异次元，WHY?
        *   ①我懒
        *   ②我懒
        *   ③我懒
        * */
        var iframe = document.createElement('iframe');
        iframe.src = 'http://miku-dancing.coding.io';
        iframe.classList.add('mmdIframe');
        this.iframeName = 'iframe_' + this.ramdomId;
        iframe.id = this.iframeName;
        iframe.name = this.iframeName;
        this.element.appendChild(iframe);

        /*
        * 添加负离子防御罩，启用时空拖拽
        * */
        var overlay = document.createElement('div');
        overlay.classList.add('mmdOverlay');
        overlay.id = 'overlay_' + this.ramdomId;
        this.element.appendChild(overlay);
    }

    MikuView.prototype.serialize = function () {
    };

    MikuView.prototype.destroy = function () {

        return this.element.remove();
    };

    MikuView.prototype.getElement = function () {
        return this.element;
    };
    MikuView.prototype.setCount = function (count) {
        var displayText;
        displayText = "There are " + count + " words.";
        return this.element.children[0].textContent = displayText;
    }
    MikuView.prototype.initEventBind = function () {

        $(document).mousemove(function (e) {
            if (!!this.move) {
                var posix = !document.move_target ? {
                        'x': 0,
                        'y': 0
                    } : document.move_target.posix,
                    callback = document.call_down || function () {
                            $(this.move_target).css({
                                'top': e.pageY - posix.y,
                                'left': e.pageX - posix.x
                            });
                        };

                callback.call(this, e, posix);
            }
        }).mouseup(function (e) {
            if (!!this.move) {
                var callback = document.call_up || function () {
                    };
                callback.call(this, e);
                $.extend(this, {
                    'move': false,
                    'move_target': null,
                    'call_down': false,
                    'call_up': false
                });
            }
        });

        /*
        * 绑定时空转移事件
        * */
        $('#container_' + this.ramdomId).mousedown(function (e) {
            console.log('mousedown');
            var offset = $(this).offset();
            this.posix = {
                'x': e.pageX - offset.left,
                'y': e.pageY - offset.top
            };
            $.extend(document, {
                'move': true,
                'move_target': this
            });
        });
        /*
        * TODO 缩放支持
        * */
    }
    /*
    * 增加帧数
    * */
    MikuView.prototype.addFrame = function(s) {
        this.miku.control.addFrame(s);
    }
    MikuView.prototype.play = function() {
        if(this.miku.control){
            this.miku.control.play();
        }
    }
    MikuView.prototype.pause = function() {
        if(this.miku.control){
            this.miku.control.pause();
        }
    }
    return MikuView;

})();

// ---
// generated by coffee-script 1.9.2
